<!--
***********************************************************************************************
Doc.Net Custom build steps.
https://github.com/DocDotNet
Copyright (C) Doc.Net Group. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
    </PropertyGroup>

  <ItemGroup>
    <AvailableItemName Include="DocNet" />
    <AvailableItemName Include="DocNetConfiguration" />
  </ItemGroup>

  <Target Name="BuildNuget" AfterTargets="Build">
    <!--
    <Exec WorkingDirectory="$(MSBuildThisFileDirectory)"
              Command="$(MSBuildThisFileDirectory)nuget.exe pack $(MSBuildThisFileDirectory)Doc.Net.Framework.nuspec" />
     -->
  </Target>

  <Target Name="IsolateLoadingDocNetDll" AfterTargets="Build">
    <!-- Doesnt work because it doesnt fire up a new msbuild.exe
    <MsBuild Projects="$(MSBuildThisFileFullPath)" Targets="CompileSelfDoc"/> -->
    <Exec Command="&quot;$(MSBuildBinPath)\msbuild.exe&quot; &quot;$(MSBuildThisFileFullPath)&quot; /t:CompileSelfDoc /p:DocProj=&quot;$(MSBuildProjectFullPath)&quot;;Dll=&quot;$(TargetPath)&quot;" />
  </Target>

  <Target Name="CompileSelfDoc">
    <SelfCompile Project="$(DocProj)" Dll="$(Dll)" />
  </Target>

  <!-- Task to use reflection to perform the compile. -->
  <UsingTask TaskName="SelfCompile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll" >
    <ParameterGroup>
      <Dll ParameterType="System.String" Required="true" />
      <Project ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
		      Log.LogMessage(Microsoft.Build.Framework.MessageImportance.High, System.String.Format("Compiling project {0}.", Project));
          var assembly = System.Reflection.Assembly.LoadFrom(Dll);
          assembly.GetType("Doc.Net.Framework.Compiler").GetMethod("CompileProject").Invoke(null, new object[] { Project });
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
